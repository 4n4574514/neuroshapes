{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/index.html","text":"","title":"Neuroshapes"},{"location":"/index.html#neuroshapes","text":"","title":"Neuroshapes"},{"location":"/index.html#motivation","text":"The goal of Neuroshapes is the development of open, use case driven and shared validatable data models (schemas, vocabularies) to enable the FAIR principles (Findable, Accessible, Interoperable and Reusable) for basic, computational and clinical neuroscience (meta)data. The data models developed thus far entities for electrophysiology, neuron morphology, brain atlases, in vitro electrophysiology and computational modeling. Future developments could include brain imaging, transcriptomic and clinical form data, as determined by community interests.\nNote All data models presented in this documentation are still drafts. Potential changes can be discussed on Github or on Gitter","title":"Motivation"},{"location":"/index.html#goals","text":"the use of standard semantic markups and linked data principles as ways to structure metadata and related data: the W3C RDF format is leveraged, specifically its developer-friendly JSON-LD serialization. The adoption of linked data principles and JSON-LD will ease federated access and discoverability of distributed neuroscience (meta)data over the web. the use of the W3C SHACL (Shapes Constraint Language) recommendation as a rich metadata schema language which is formal and expressive; interoperable; machine-readable; and domain-agnostic. With SHACL, (meta)data quality can be enforced based on schemas and vocabularies (easily discoverable and searchable) rather than being fully encoded in procedural codes. SHACL also provides key interoperability capabilities to ensure the evolution of standard data models and data longevity. It allows to incrementally build standard data models in terms of semantics and sophistication. the reuse of existing schemas and semantic markups (like schema.org ) and existing ontologies and controlled vocabularies (including NIFSTD - NIF Standard Ontologies) the use of the W3C PROV-O recommendation as a format to record (meta)data provenance: a SHACL version of the W3C PROV-O is created.","title":"Goals"},{"location":"/index.html#join-the-incf-neuroshape-sig","text":"The special interest group can be joined by following instructions available here.","title":"Join the INCF Neuroshape SIG"},{"location":"/gettingstarted/index.html","text":"","title":"Getting Started"},{"location":"/gettingstarted/index.html#getting-started","text":"","title":"Getting Started"},{"location":"/gettingstarted/overview.html","text":"","title":"Overview"},{"location":"/gettingstarted/overview.html#overview","text":"A draft for a standardized description of data provenance for the following domains:\nData models Brain Atlas Electrophysiology Morphology\nNote All data models presented in this documentation are still drafts. Potential changes can be discussed on Github or on Gitter","title":"Overview"},{"location":"/datamodeling/index.html","text":"","title":"Modeling Your Data"},{"location":"/datamodeling/index.html#modeling-your-data","text":"Example driven introduction to linked data modeling principles as well as JSON-LD.","title":"Modeling Your Data"},{"location":"/shacl-tutorial/overview/index.html","text":"","title":"SHACL In a Nutshell"},{"location":"/shacl-tutorial/overview/index.html#shacl-in-a-nutshell","text":"This document presents an example-driven overview of the W3C SHACL recommendation for RDF data validation.\nNote The overview only introduces the W3C SHACL specification in the context of its usage within Neuroshapes. For an in-depth description, the user should read the W3C SHACL recommendation but also the excellent set of learning resources available at the Validating RDF website.\nIt is highly recommended to read the following section before continuing to read this document:\nJSON for Linking Data","title":"SHACL In a Nutshell"},{"location":"/shacl-tutorial/overview/index.html#what-is-shacl-","text":"The SHApes Constraint Language (**SHACL**) is a W3C recommendation allowing to validate a RDF graph against a set of constraints defined in so-called shapes.","title":"What is SHACL ?"},{"location":"/shacl-tutorial/overview/index.html#json-ld-serialization","text":"All examples (both shapes and data) in this document are serialized using the JSON-LD format unlike the W3C SHACL recommendation document where TURTLE is preferred. While Turtle is more compact, JSON-LD is more suitable for exchange in the context of the web through already popular json APIs which is an important aspect for adoption purpose specially by developers. Nevertheless, it is possible to convert from one format to the other using many converters available online. EASYRDF is one example.","title":"JSON-LD serialization"},{"location":"/shacl-tutorial/overview/index.html#namespaces-and-context","text":"JSON-LD can be very verbose if a context is not provided. To improve readability and to simplify both shapes and data examples, a SHACL context as well a prefix mappings was created as shown below. This context is only related to the SHACL vocabulary (i.e. the set of terms defined in the SHACL specification) and it is highly recommended to use it. Since writing a SHACL shape almost always required using a domain vocabulary, the SHACL context can be updated with domain specific prefix mappings or aliases when needed. In all cases, the context below will be refer to http://example.org/shaclcontext from now on.\nPrefix mappings Prefix Name | Namespace\n-------------- | --------------\nsh | http://www.w3.org/ns/shacl#\nshsh | http://www.w3.org/ns/shacl-shacl#\nrdf | http://www.w3.org/1999/02/22-rdf-syntax-ns#\nrdfs | http://www.w3.org/2000/01/rdf-schema#\nowl | http://www.w3.org/2002/07/owl#\nxsd | http://www.w3.org/2001/XMLSchema#\nprov | http://www.w3.org/ns/prov#\nskos | http://www.w3.org/2004/02/skos/core#\nschema | http://schema.org/\nnxv | https://bbp-nexus.epfl.ch/vocabs/nexus/core/terms/v0.1.0/\nnsg | https://bbp-nexus.epfl.ch/vocabs/bbp/neurosciencegraph/core/v0.1.0/\nex | http://example.org/Full source at GitHub SHACL JSON-LD context {\n  \"@context\": [\n    {\n      \"owl\": \"http://www.w3.org/2002/07/owl#\",\n      \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n      \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n      \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n      \"skos\": \"http://www.w3.org/2004/02/skos/core#\",\n      \"prov\": \"http://www.w3.org/ns/prov#\",\n      \"sh\": \"http://www.w3.org/ns/shacl#\",\n      \"shsh\": \"http://www.w3.org/ns/shacl-shacl#\",\n      \"dcterms\": \"http://purl.org/dc/terms/\",\n      \"schema\": \"http://schema.org/\",\n      \"nxv\": \"https://bbp-nexus.epfl.ch/vocabs/nexus/core/terms/v0.1.0/\",\n      \"nsg\": \"https://bbp-nexus.epfl.ch/vocabs/bbp/neurosciencegraph/core/v0.1.0/\",\n      \"class\": {\n        \"@id\": \"sh:class\",\n        \"@type\": \"@id\"\n      },\n      \"path\": {\n        \"@id\": \"sh:path\",\n        \"@type\": \"@id\"\n      },\n      \"qualifiedValueShape\": {\n        \"@id\": \"sh:qualifiedValueShape\",\n        \"@type\": \"@id\"\n      },\n      \"qualifiedValueShapesDisjoint\": {\n        \"@id\": \"sh:qualifiedValueShapesDisjoint\",\n        \"@type\": \"xsd:boolean\"\n      },\n      \"qualifiedMinCount\": {\n        \"@id\": \"sh:qualifiedMinCount\",\n        \"@type\": \"xsd:integer\"\n      },\n      \"qualifiedMaxCount\": {\n        \"@id\": \"sh:qualifiedMaxCount\",\n        \"@type\": \"xsd:integer\"\n      },\n      \"maxCount\": {\n        \"@id\": \"sh:maxCount\",\n        \"@type\": \"xsd:integer\"\n      },\n      \"minCount\": {\n        \"@id\": \"sh:minCount\",\n        \"@type\": \"xsd:integer\"\n      },\n      \"minInclusive\": {\n        \"@id\": \"sh:minInclusive\"\n      },\n      \"maxInclusive\": {\n        \"@id\": \"sh:maxInclusive\"\n      },\n      \"maxExclusive\": {\n        \"@id\": \"sh:maxExclusive\"\n      },\n      \"minExclusive\": {\n        \"@id\": \"sh:minExclusive\"\n      },\n      \"in\": {\n        \"@id\": \"sh:in\",\n        \"@container\": \"@list\"\n      },\n      \"imports\": {\n        \"@id\": \"owl:imports\",\n        \"@type\": \"@id\",\n        \"@container\": \"@set\"\n      },\n      \"datatype\": {\n        \"@id\": \"sh:datatype\",\n        \"@type\": \"@id\"\n      },\n      \"description\": {\n        \"@id\": \"sh:description\"\n      },\n      \"name\": {\n        \"@id\": \"sh:name\"\n      },\n      \"severity\": {\n        \"@id\": \"sh:severity\"\n      },\n      \"nodeKind\": {\n        \"@id\": \"sh:nodeKind\",\n        \"@type\": \"@id\"\n      },\n      \"BlankNode\": {\n        \"@id\": \"sh:BlankNode\"\n      },\n      \"BlankNodeOrIRI\": {\n        \"@id\": \"sh:BlankNodeOrIRI\"\n      },\n      \"BlankNodeOrLiteral\": {\n        \"@id\": \"sh:BlankNodeOrLiteral\"\n      },\n      \"IRI\": {\n        \"@id\": \"sh:IRI\"\n      },\n      \"IRIOrLiteral\": {\n        \"@id\": \"sh:IRIOrLiteral\"\n      },\n      \"Literal\": {\n        \"@id\": \"sh:Literal\"\n      },\n      \"prefix\": {\n        \"@id\": \"sh:prefix\",\n        \"@type\": \"xsd:string\"\n      },\n      \"declare\": {\n        \"@id\": \"sh:declare\"\n      },\n      \"namespace\": {\n        \"@id\": \"sh:namespace\",\n        \"@type\": \"xsd:anyURI\"\n      },\n      \"Violation\": {\n        \"@id\": \"sh:Violation\"\n      },\n      \"suggestedShapesGraph\": {\n        \"@id\": \"sh:suggestedShapesGraph\",\n        \"@type\": \"@id\"\n      },\n      \"shapesGraph\": {\n        \"@id\": \"sh:shapesGraph\",\n        \"@type\": \"@id\"\n      },\n      \"node\": {\n        \"@id\": \"sh:node\",\n        \"@type\": \"@id\"\n      },\n      \"property\": {\n        \"@id\": \"sh:property\",\n        \"@type\": \"@id\",\n        \"@container\": \"@set\"\n      },\n      \"targetClass\": {\n        \"@id\": \"sh:targetClass\",\n        \"@type\": \"@id\"\n      },\n      \"targetObjectsOf\": {\n        \"@id\": \"sh:targetObjectsOf\",\n        \"@type\": \"@id\"\n      },\n      \"targetSubjectsOf\": {\n        \"@id\": \"sh:targetSubjectsOf\",\n        \"@type\": \"@id\"\n      },\n      \"targetNode\": {\n        \"@id\": \"sh:targetNode\",\n        \"@type\": \"@id\"\n      },\n      \"target\": {\n        \"@id\": \"sh:target\",\n        \"@type\": \"@id\"\n      },\n      \"isDefinedBy\": {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\",\n        \"@type\": \"@id\"\n      },\n      \"shapes\": {\n        \"@reverse\": \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\",\n        \"@type\": \"@id\",\n        \"@container\": \"@set\"\n      },\n      \"Shape\": {\n        \"@id\": \"sh:Shape\"\n      },\n      \"NodeShape\": {\n        \"@id\": \"sh:NodeShape\"\n      },\n      \"PropertyShape\": {\n        \"@id\": \"sh:PropertyShape\"\n      },\n      \"or\": {\n        \"@id\": \"sh:or\",\n        \"@type\": \"@id\",\n        \"@container\": \"@list\"\n      },\n      \"and\": {\n        \"@id\": \"sh:and\",\n        \"@type\": \"@id\",\n        \"@container\": \"@list\"\n      },\n      \"xone\": {\n        \"@id\": \"sh:xone\",\n        \"@type\": \"@id\",\n        \"@container\": \"@list\"\n      },\n      \"not\": {\n        \"@id\": \"sh:not\",\n        \"@type\": \"@id\",\n        \"@container\": \"@list\"\n      },\n      \"lessThan\": {\n        \"@id\": \"sh:lessThan\",\n        \"@type\": \"@id\"\n      },\n      \"hasValue\": {\n        \"@id\": \"sh:hasValue\"\n      },\n      \"resultMessage\": {\n        \"@id\": \"sh:message\"\n      },\n      \"deactivated\": {\n        \"@id\": \"sh:deactivated\"\n      },\n      \"pattern\": {\n        \"@id\": \"sh:pattern\"\n      },\n      \"label\": {\n        \"@id\": \"rdfs:label\",\n        \"@type\": \"xsd:string\"\n      },\n      \"comment\": {\n        \"@id\": \"rdfs:comment\",\n        \"@type\": \"xsd:string\"\n      },\n      \"editorialNote\": {\n        \"@id\": \"skos:editorialNote\",\n        \"@type\": \"xsd:string\"\n      },\n      \"seeAlso\": {\n        \"@id\": \"rdfs:seeAlso\",\n        \"@type\": \"@id\"\n      }\n    }\n  ]\n}Full source at GitHub","title":"Namespaces and Context"},{"location":"/data-models/index.html","text":"","title":"Data Models and Formats"},{"location":"/data-models/index.html#data-models-and-formats","text":"","title":"Data Models and Formats"},{"location":"/data-models/index.html#data-model-elements","text":"","title":"Data model elements"},{"location":"/data-models/index.html#overview","text":"","title":"Overview"},{"location":"/data-models/index.html#competency-questions","text":"","title":"Competency questions"},{"location":"/tools/index.html","text":"","title":"Software and Tools"},{"location":"/tools/index.html#software-and-tools","text":"","title":"Software and Tools"},{"location":"/adoption.html","text":"","title":"Adoption"},{"location":"/adoption.html#adoption","text":"","title":"Adoption"},{"location":"/meetings.html","text":"","title":"Meetings"},{"location":"/meetings.html#meetings","text":"","title":"Meetings"},{"location":"/meetings.html#up-coming-meetings","text":"Up coming meetings","title":"Up coming meetings"},{"location":"/meetings.html#past-meetings","text":"Past meetings","title":"Past meetings"},{"location":"/publication/index.html","text":"","title":"Publications"},{"location":"/publication/index.html#publications","text":"","title":"Publications"},{"location":"/license.html","text":"","title":"License"},{"location":"/license.html#license","text":"","title":"License"},{"location":"/contribution.html","text":"","title":"How to contribute"},{"location":"/contribution.html#how-to-contribute","text":"We would love for you to contribute to the Neuroshapes familly of data models and help make them even better than they are now! As a contributor, find in the next sections the guidelines we would like you to follow.","title":"How to contribute"},{"location":"/contribution.html#got-a-question-or-a-problem-","text":"Please do not hesitate to contact the INCF neuroshapes SIG at neuroshapesSIG@incf.org.","title":"Got a Question or a Problem?"},{"location":"/contribution.html#found-a-bug-","text":"If you find a bug in the source code of any tools, in any schema or vocabulary in this repository, you can help us fix it by submitting an issue to our GitHub Repository. Even better, you can submit a Pull Request with a fix.","title":"Found a Bug?"},{"location":"/contribution.html#missing-a-feature-or-a-data-model-","text":"You can request them by submitting an issue to our GitHub Repository. If you would like to implement a new feature or propose a new data model specification, please submit an issue with a proposal for your work first, to be sure it can be implemented and most importantly, to trigger discussions and enable collaborations with interested people. Please consider what kind of change it is:\nFor a Data Model Specification Proposal or Extension, first open an issue and outline your proposal so that it can be discussed. Please follow the data model specification template. Data examples implementing/illustrating an existing Data Model can be directly submitted as a Pull Request. For example different atlas releases conformant to the atlas registration prov pattern can be submitted. For a Major Feature related to the tools and scripts made available in this repository, first open an issue and outline your proposal so that it can be discussed. This will also allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project. Small Features can be crafted and directly submitted as a Pull Request.","title":"Missing a Feature or a data model?"},{"location":"/contribution.html#submission-guidelines","text":"","title":"Submission Guidelines"},{"location":"/contribution.html#submitting-an-issue","text":"Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will need as much information as possible, and preferably be in touch with you to gather information.","title":"Submitting an Issue"},{"location":"/contribution.html#submitting-a-data-model-specification","text":"Before you submit your proposal consider the following guidelines:\nPlease join the INCF Special Interest Group (SIG) on Neuroshapes before sending pull requests. Proposals are managed and reviewed by members of that INCF SIG. Make sure you’ve read the vocabulary and schemas best practices and that your Data Model Specification conform to them. Make sure your submission conform to the data model specification template.","title":"Submitting a Data Model Specification"},{"location":"/contribution.html#submitting-a-pull-request-pr-","text":"Before you submit your Pull Request (PR) consider the following guidelines:\nPlease join the INCF SIG on Neuroshapes before sending Pull requests. Proposals are managed and reviewed by members of that INCF SIG. Make sure you’ve read the vocabulary and schemas best practices and that your Pull Request conform to them. Make your changes in a new git branch: shell git checkout -b my-fix-branch master Create your patch, including appropriate test cases. See the how to write a test for a schema section Run the full test suite, and ensure that all tests pass. Commit your changes using a descriptive commit message. shell git commit -a Note: the optional commit -a command line option will automatically “add” and “rm” edited files. Push your branch to GitHub: git push origin my-fix-branch\n In GitHub, send a pull request to the master branch of the relevant component. If we suggest changes then: Make the required updates. Re-run the test suites to ensure tests are still passing. Rebase your branch and force push to your GitHub repository (this will update your Pull Request): git rebase master -i\ngit push -f\n That’s it! Thank you for your contribution! After your pull request is mergedAfter your pull request is merged, you can safely delete your branch and pull the changes from the main (upstream) repository: Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows: git push origin --delete my-fix-branch\n Check out the master branch: git checkout master -f\n Delete the local branch: git branch -D my-fix-branch\n Update your master with the latest upstream version: git pull --ff upstream master","title":"Submitting a Pull Request (PR)"},{"location":"/contribution.html#joining-the-incf-neuroshape-sig","text":"TBD","title":"Joining the INCF Neuroshape SIG"},{"location":"/contact.html","text":"","title":"Contact"},{"location":"/contact.html#contact","text":"","title":"Contact"},{"location":"/assets/contexts/nexus/core/shacl20170720/prefixmapings.html","text":"Prefix Name Namespace sh http://www.w3.org/ns/shacl# shsh http://www.w3.org/ns/shacl-shacl# rdf http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs http://www.w3.org/2000/01/rdf-schema# owl http://www.w3.org/2002/07/owl# xsd http://www.w3.org/2001/XMLSchema# prov http://www.w3.org/ns/prov# skos http://www.w3.org/2004/02/skos/core# schema http://schema.org/ nxv https://bbp-nexus.epfl.ch/vocabs/nexus/core/terms/v0.1.0/ nsg https://bbp-nexus.epfl.ch/vocabs/bbp/neurosciencegraph/core/v0.1.0/ ex http://example.org/","title":""}]}